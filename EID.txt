****WHAT IS EMPOWER ID:
-> Empower ID is a powerful software solution designed for Identity Governance, Access Management, Single Sign-On (SSO), and Privileged Access Management (PAM). It offers a flexible setup that can be used either as a cloud-based solution (SaaS) or installed on-premise.

What's great about Empower ID is that it's built with modern technology like containers and microservices, which means it’s scalable and adaptable to your needs. Whether you're using it in the cloud or on your own servers, it works the same way.

It’s hosted in Azure for security and to ensure data compliance in various regions. This makes it a reliable solution for businesses that need to stay on top of regulations.

****EMPOWER ID CAPABILITIES:
-> Empower ID doesn’t just handle your workforce identities. It also manages partners, customers, and even non-human accounts like applications, devices, or bots.
So whether you're dealing with people or machines, Empower ID ensures that all identities are secure and well-managed.

****IDENTITY GOVERNANCE & ADMINISTRATION:
-> One key area of Empower ID is Identity Governance & Administration. This focuses on the entire identity lifecycle — from creating, modifying, and managing identities, to ensuring proper access control. it's about making sure the right people (and machines) have the right access at the right time — all from an administrative perspective.


----------------------------------------------------------------------------------------------------------------------------------------------------------

****EMPOWER ID CONCEPTS:
-> THE IDENTITY WAREHOUSE: One of the key concepts of Empower ID is its Identity Warehouse, also known as the Identity and Entitlement Warehouse. Think of it as the central hub or database where everything important in Empower ID is stored.

-> WHAT DOES THE IDENTITY WAREHOUSE STORE?: 
Primary data (like policies and configurations).
Key Empower ID objects, such as People and Roles.
Inbox and Outbox queues that manage the flow of detected changes and outbound updates between Empower ID and other systems.
Inventoried objects and data from external systems connected to Empower ID.

-> ACCOUNT STORES & RESOURCE SYSTEMS: Empower ID connects to external systems, which it refers to as Account Stores and Resource Systems, These are systems outside Empower ID that are integrated into the Identity Warehouse to pull in and store important identity and entitlement data.

****EMPOWER ID COMPONENTS: 
-> EMPOWER ID COMPONENTS OVERVIEW: When working with Empower ID, you’ll come across a key term: Empower ID Components.
These components act as a bridge between the Identity Warehouse and the API, exposing the tables, views, and stored procedures for use.

-> WHAT ARE EMPOWER ID COMPONENTS?:
Programmable objects that represent major SQL tables and views in the system.
They allow the user interface to interact with data, workflows, and code.
Enable CRUD operations (Create, Read, Update, Delete) to be performed.

In EID UI labels components as RBAC objects. This is because there is an entry for every table and view, aka “component” in the RBACObject table

in RBAC objects there is tables and views. and RBACObjectsMethod table stores store procedures.
RBACObjectsAttribute table stores column names.


-> EXTENDING THE SCHEMA: 
When we talk about extending the schema, we mean adding new virtual properties or methods to the components. This allows you to customize and expand the functionality of Empower ID.

-> DISABLED COMPONENTS AND SECURITY: 
While Empower ID offers a lot of components, many are disabled by default for security reasons and are not available in the user interface or for custom development.
For example, the Account component (representing the account table) is not accessible via the API, while the more secure AccountView component is.

-> RBAC Objects and Methods: 
In the schema management UI, components are labeled as RBAC Objects (Role-Based Access Control Objects)
Each table and view corresponds to an entry in the RBACObject table
You can also find SQL stored procedures for these components under the RBAC Object Methods tab.

****PERSON VERSUS ACCOUNT:
In every IT system, there is something called a user account. This user account is used to control what someone can do in the system (permissions) and to verify who they are (authentication). In EmpowerID, the user account is called a Person object, and it is stored in a table called the Person table.

Accounts are from external system and person objects are primary identity from Empower ID system. Account stores is an external system containing the users accounts.

Whenever anyone wants to use EmpowerID, they need a Person object. All the activities in EmpowerID, like assigning roles, giving access, checking access, and making sure everything is secure, revolve around this Person object. This means that whether it's an employee, partner, or customer, they only need a Person object to use EmpowerID, even if they don’t have other user accounts.

EmpowerID helps manage and track security by giving an overall view of who has access to what across the organization's IT systems, both in the office (on-premise) and in the cloud. To do this, EmpowerID pulls user accounts from external systems (like other IT tools) into a table called the Account table. These external systems are called Account Stores.

A big job of EmpowerID is to make sure that access given to people is compliant, which means it follows the organization’s rules and policies to keep things secure. The access should make sense based on who the person is, their job role, and other details. So, to manage this properly, EmpowerID links these Accounts (from external systems) with the Person object so they can be viewed and managed as one complete unit.

Multiple Person Objects for One Person: If a person has multiple accounts (like admin access), EmpowerID links them with Core Identity, which represents the main identity. Only the Person can log in.

Managing Responsibility: EmpowerID assigns responsible parties to key objects like accounts and roles. If someone leaves, you can transfer their responsibilities.


****RESOURCES AND RESOURCE SYSTEMS

****ACCOUNTS STORES AND SECURITY BOUNDARIES:
EmpowerID helps track which accounts and groups have access to resources across different systems. Usually, accounts and groups are in the same system, but for systems like Microsoft Exchange or Active Directory, accounts and groups might be in different systems. For example, mailboxes are in the Exchange system, but user accounts and groups are in Active Directory.

EmpowerID keeps track of this by linking these systems in a special table called the AccountStore table. This table shows that these systems have security data that can control access to other resources.

In cases like Microsoft Exchange, where mailboxes can be accessed by accounts from multiple Active Directory domains, EmpowerID has to understand which accounts can access which mailboxes. To manage this, EmpowerID uses a SecurityBoundary table. This table links accounts from different Active Directory domains and resource systems, based on trust relationships.

Each Security Boundary represents a specific set of accounts that belong to a certain domain or system. The Security BoundaryType keeps track of how EmpowerID connects to these systems to manage, update, or delete accounts.








