The EmpowerID system is a complex setup that helps manage and organize digital identities. It works by breaking down tasks into smaller parts (called containers) that can work independently but also communicate with each other. Here's how it works:
1. Containers: These are like separate "boxes" where different tasks run, such as showing the user interface (UI), processing jobs in the background, or handling the database.
2. Job Balancing: The system automatically divides the work between different containers to ensure that everything keeps running smoothly.
3. Heartbeat: Each background job sends a message to the database to confirm it’s still working and can handle requests.
4. Job Claiming: Each container can take on different tasks, depending on what is needed, so no task gets stuck if one part stops working.
5. Queues: Tasks are placed in a queue, so even if the server goes offline, no work is lost. It can be picked up again later.
6. UI: The user interface is always available, and it can adjust the load based on the number of users.
7. Database Mirroring: The database is copied in different places, ensuring it’s always available if one server fails.
8. Microservices: Some parts of EmpowerID work as small, independent services that can be updated and run separately.
9. Azure App Services: These services are hosted on Microsoft Azure, a platform that helps run and manage applications over the internet.
EmpowerID Setup: The system is implemented in three different stages (Development, User Testing, and Production) to ensure everything works properly before going live.
SaaS (Software as a Service): EmpowerID runs on Microsoft Azure, meaning it is scalable (can grow as needed) and always available. This setup makes sure everything is secure, fast, and works without issues.


****CONTAINER AND MICROSERVICES
------------------------------------------------
1. EmpowerID Worker Containers:- are parts of a system that handle important background tasks like managing security, syncing data, and running internal services. These containers do not interact with users directly. They focus on behind-the-scenes work like:
	- Managing security (RBAC – Role-Based Access Control)
	- Processing inventory and resources
	- Enforcing permissions and rights
The number and size of these containers depend on how many applications and processes need to be managed.
Some key details:
	- They don't accept incoming connections, so they don’t need to listen for requests or use secure connections (SSL).
	- They need a program called IIS (Internet Information Services) to help run the EmpowerID Web Service Garden, which handles the worker tasks.
	- Their main jobs include running tasks like:
		- Managing security settings (RBAC).
		- Processing inventory.
		- Managing resource permissions.
		- Enforcing rights.
These worker containers are similar to the on-premise Worker Role Service used in older setups, doing similar tasks in a cloud environment.

2. EmpowerID UI Containers: are the part of the system that handle the user-facing side of the application. They manage the web pages and any actions or workflows that users start when they interact with the system.
Here are the key points:
	- User Interface (UI): These containers display the web pages and perform tasks that users trigger, like clicking buttons or starting workflows.
	- Secure Access: By default, all web resources are accessed securely through HTTPS, and the UI doesn’t keep track of previous user actions (it's "stateless").
	- Similar to older systems: The UI container role works like the old on-premise Web Role Service but in a cloud setup.
Key Details:
- No inbound connections: The UI containers don’t accept incoming connections, so they don’t listen on a port or need SSL connections.
- Services provided:
	- Workflow management (handling user actions).
	- Event publication and subscriptions (sending out and receiving important events).
	- Heartbeat monitoring (checking if everything is running).
	- Alert processing (handling alerts and notifications).
In short, these containers focus on what the user sees and interacts with, running all the necessary processes that happen when a user uses the system.



3. The EmpowerID API Gateway / Reverse Proxy:- helps users access an organization’s web applications securely. It provides single sign-on (so users only need to log in once) and ensures users are authorized to use the web applications.
Here’s how it works:
	- Reverse Proxy: This service stands between the user and the web applications. It handles user requests and forwards them to the right place.
	- API Gateway: It helps manage and secure access to the different services and data that the user might need.
The system uses Docker Containers to run the API Gateway and Reverse Proxy. These containers can work together in environments like Docker Swarm or Kubernetes (tools for managing containers).
For on-premise customers, using this system to protect EmpowerID is free.
In short, the API Gateway/Reverse Proxy helps users securely access web applications, making sure they are logged in and allowed to use the services.



****ON-PRMISE COMPONENTS
------------------------------------------
Required for Management of On-Premise Systems
---------------------------------------------
	- The Remote Identity Provider (IdP) helps users in different or less-trusted networks log in to EmpowerID securely using their Active Directory (AD) accounts. So, if a partner or customer has their own directory (like AD), they can still let their users access EmpowerID without needing to create new accounts in EmpowerID.

What it does:
	
	- Set Up on Web Server: The Remote IdP is installed on a web server in the partner’s or customer’s network (this can be a network that is not fully trusted or remote).

	- User Login: When a user tries to log in to EmpowerID, they can choose the Remote IdP (instead of logging in directly to EmpowerID).

	- Redirects to Remote Network: EmpowerID sends them to the remote web server where they can log in using their Active Directory username and password.

	- Authentication: The Remote IdP checks the user’s details in their own Active Directory.

	- Login Success: If the details are correct, the Remote IdP sends a message back to EmpowerID, saying the user is authorized to use the system.

	- Auto-Registration: EmpowerID can then automatically create an account for that user based on the information they used to log in.

In simple terms:

	- This system allows people in different, trusted, or remote networks to log in to EmpowerID using their existing company accounts, without needing to create new accounts in EmpowerID. It makes it easier for users to access EmpowerID while keeping everything secure and linked to their existing directories.
	
Client Tools
------------

The Windows Credential Provider is a tool called JINA that works with Windows 10 and Windows Server. It helps users reset their password easily by using EmpowerID's Password Reset Center. Here’s how it works:
	- Password Reset: When a user presses Ctrl + Alt + Delete to log in to Windows, they can click a link to reset their password.
	- Embedded Browser: This link opens a small browser window inside Windows where the user can start the password reset process.
	- Authentication: The user may need to answer security questions or use another form of authentication (like multi-factor authentication).
	- Resetting the Password: Once the user successfully resets their password, it updates both in EmpowerID and Active Directory (if linked with Active Directory).
	-Login with New Password: After the reset, the user is sent back to the Windows login screen to log in with their new password.
In simple terms, this tool allows users to reset their passwords easily from the Windows login screen using EmpowerID, even if they’ve forgotten their password.


Privileged Application Launcher
----------------------------------------
The EmpowerID Privileged Application Launcher is a tool that you can install on a Windows 10 workstation connected to a domain. It helps you run applications with special, secure credentials (called vaulted credentials) from the EmpowerID Privileged Access System.
Here’s how it works:
	- Vaulted Credentials: When you want to run applications that need admin access (like SQL Server Management Studio or other system tools), you can use vaulted credentials stored securely in EmpowerID. These are like stored, safe login details for admin accounts.
	- Right-Click Menu: Normally, when you right-click on an app, you can choose to run it as a different user by entering the user’s credentials. But with the Privileged Application Launcher, there’s a new option that says "Run with EmpowerID".
	- Using Vaulted Credentials: When you choose this option, it lets you pick from the vaulted credentials stored in EmpowerID. You can then enter your master password, and EmpowerID will use the selected credential to run the application with the required admin rights.
	- Secure Credential Management: This tool ensures that all your credentials are safely managed within EmpowerID, following strict controls and rules about who can access them.
In short:
	- The Privileged Application Launcher makes it easier and safer to run applications that need special access by using securely stored credentials, so you don’t have to manually enter them every time. It integrates tightly with EmpowerID, keeping everything secure and well-managed.


Cloud Gateway
-------------
The Cloud Gateway is like a bridge that connects your company's internal network to the EmpowerID Cloud securely. It helps EmpowerID manage your on-premise (local) systems without needing to open special firewall ports.
How it works:
	- You install the Cloud Gateway on a Windows computer in your company’s network.
	- It creates a security key (a certificate) to make sure communication is safe
	- It connects to the EmpowerID Cloud using a secure HTTPS (TLS) connection.
	- No need to open firewall ports, so your system stays secure.
	- Multiple Gateways can be installed to make sure everything runs smoothly.
	
Cloud Gateway Communication
---------------------------

Step-by-Step Process
	1 - Create a Special User (EmpowerID Person)
		- Before installing the Cloud Gateway Client, you need a special user account in EmpowerID.
		- This user will register and manage the Cloud Gateway Client.
		- Assign to that Person the UI-Admin-Cloud-Gateway Management Role
	2 - Register the Cloud Gateway Client
		- Install the Cloud Gateway Client on your server.
		- Use the special user account from Step 1 to register it with EmpowerID.
		- If registration is successful:
			- A security certificate is generated and stored on the server.
			- A public key is sent to EmpowerID to allow secure communication.
	3 - Client Calls EmpowerID
		- The Cloud Gateway Client contacts EmpowerID to get connection details for Azure.
	4 - Client Connects to Azure
		- The Cloud Gateway Client uses the information received from EmpowerID to connect to an Azure queue.
	5- EmpowerID Connects to Azure
		- EmpowerID also connects to the same Azure queue, creating a secure communication link between the Cloud Gateway Client and EmpowerID.
		- All communication is protected using TLS encryption.


EmpowerID Server Roles
----------------------

Understanding EmpowerID Server Roles in Simple Words:-
Think of the EmpowerID system as a big team with two main types of workers:
	- Front-End Servers (UI Containers) – Like the customer service team in a company.
	- Back-End Servers (Worker Containers) – Like the factory workers who do heavy processing behind the scenes.
What Does Each Server Do?
	🔵 Front-End Servers (UI Containers) – The "Customer Service Team"
		✔️ These servers handle web pages and user interactions.
		✔️ They support workflow processes (like approvals, requests, and user logins).
		✔️ They connect to different systems to get data quickly.
	🟢 Back-End Servers (Worker Containers) – The "Factory Workers"
		✔️ These servers do background tasks that take a long time.
		✔️ They handle security checks, automation, and inventory management.
		✔️ They enforce policies and make sure everything runs smoothly.
What Happens If One Server Fails?
	✔️ The same job or task can run on multiple servers.
	✔️ If one server stops working, other servers will continue the work.
	✔️ This is called load balancing and failover, which keeps the system running without problems.
A Simple Example:-
	Imagine an online store like Amazon:
		✔️ The Front-End Server is like the website that customers use to browse and place orders.
		✔️ The Back-End Server is like the warehouse where workers pack and ship items.
If one warehouse (Back-End Server) closes for the day, other warehouses will continue processing orders.
Key Takeaways
	✅ Front-End Servers handle user interactions and workflows.
	✅ Back-End Servers process long-running tasks like security and automation.
	✅ Jobs can run on multiple servers for better performance and backup.
	✅ If one server fails, others take over so the system never stops working.	
	
------------------------
Understanding Permanent Workflows in Simple Terms
A permanent workflow is like an automated worker that keeps running all the time based on business needs. It follows a fixed schedule and does important tasks in the background.
How Permanent Workflows Work in EmpowerID
1️⃣ Only One at a Time – A permanent workflow can only run on one worker server (back-end server) at a time.
2️⃣ Pre-Built & Custom Workflows – EmpowerID comes with ready-made permanent workflows, but you can also create your own in Workflow Studio.
3️⃣ Default Settings – If no special configuration is set, EmpowerID uses default settings for each workflow.
4️⃣ Viewing & Managing Workflows –
You can find all permanent workflows in the EmpowerID system.
To do this, go to:
Infrastructure Admin > EmpowerID Servers and Settings > Permanent Workflows
Click on the workflow name to see details on the "View One" page.
Simple Example
Imagine a security camera system in a shopping mall:
The camera is always running, monitoring activity continuously.
It is set to record based on a schedule (e.g., 24/7 or only at night).
Only one camera operator can manage a specific live feed at a time.
If settings are not changed, the camera follows default settings (e.g., motion detection ON).
This is how permanent workflows work in EmpowerID—they run non-stop, handling important tasks like security, data processing, and policy enforcement.
Key Takeaways
✅ Runs continuously based on business needs.
✅ Only one instance of a workflow runs at a time.
✅ Comes with pre-built workflows, but you can create custom ones.
✅ Uses default settings unless changed.
✅ Can be viewed & managed in EmpowerID’s Permanent Workflows page.
